name: Deno CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      DENO_DIR: .deno_cache

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      - name: Cache Deno dependencies
        uses: actions/cache@v4
        with:
          path: ${{ env.DENO_DIR }}
          key: ${{ runner.os }}-deno-${{ hashFiles('deno.lock') }}
          restore-keys: |
            ${{ runner.os }}-deno-

      # Install system dependencies required for canvas
      - name: Install system dependencies for canvas
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libcairo2-dev libpango1.0-dev libjpeg-dev libgif-dev librsvg2-dev

      # Instead of using npm directly, we'll use Deno's npm compatibility
      - name: Setup npm packages with Deno
        run: deno task npm:setup

      - name: Check formatting
        run: deno fmt --check

      - name: Lint code
        run: deno lint

      - name: Run tests with coverage
        run: deno test --allow-ffi --allow-read --allow-write --allow-env --allow-net --allow-run --allow-scripts --coverage=coverage

      - name: Generate coverage report
        run: deno coverage --lcov coverage > coverage.lcov

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.lcov
          fail_ci_if_error: false
